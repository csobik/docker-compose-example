buildscript {
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        maven {
            url "https://repo.spring.io/plugins-release/"
        }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}",
                "com.avast.gradle:gradle-docker-compose-plugin:${dockerComposePluginVersion}",
                "com.bmuschko:gradle-docker-plugin:${gradleDockerPluginVersion}",
                "com.netflix.nebula:nebula-release-plugin:10.1.1"
        )
    }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'docker-compose'
apply plugin: 'com.bmuschko.docker-java-application'
apply plugin: 'nebula.release'


dockerCompose {
    useComposeFiles = ["config/compose.yml"]
}

bootJar {
    group = 'org.csobik'
    baseName = 'docker-compose-example'
    classifier = 'executable'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    compile(
            "org.springframework.boot:spring-boot-starter-web:${springBootVersion}",
            "org.springframework.boot:spring-boot-starter-data-jpa:${springBootVersion}",
            "mysql:mysql-connector-java:${mysqlConnector}"
    )

    compileOnly "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"

    testCompile (
            'junit:junit:4.12'
    )
}

// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    mavenCentral()
}

// tasks.release.finalizedBy tasks.publish (4)

// build docker image
import com.bmuschko.gradle.docker.tasks.image.DockerBuildImage
task buildDockerImage(type: DockerBuildImage, dependsOn: [bootJar]) {
    doFirst {
        copy {
            from 'config/Dockerfile'
            into 'build/libs'
        }
    }
    tag = "example/docker-compose-example:latest"
    inputDir = project.file('build/libs')

}
